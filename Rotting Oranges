class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        q = [ ]
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == 2:
                    q.append((i,j))
        minutes = -1
        while len(q):
            minutes += 1
            temp = [ ]
            while len(q):
                temp.append(q.pop())
            for pair in temp:
                i = pair[0]
                j = pair[1]
                if i - 1 >= 0 and grid[i - 1][j] == 1:
                    grid[i - 1][j] = 2
                    q.append((i - 1, j))
                if i + 1 < len(grid) and grid[i + 1][j] == 1:
                    grid[i + 1][j] = 2
                    q.append((i + 1, j))
                if j - 1 >= 0 and grid[i][j  - 1] == 1:
                    grid[i][j  - 1] = 2
                    q.append((i, j - 1))
                if j + 1 < len(grid[0]) and grid[i][j + 1] == 1:
                    grid[i][j + 1] = 2
                    q.append((i, j + 1))
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == 1:
                    return -1
        return 0 if minutes == -1 else minutes

class Solution:
    def minWindow(self, s: str, t: str) -> str:
        dic = { }
        for char in t:
            if char in dic:
                dic[char] += 1
            else:
                dic[char] = 1
        minStr = (float("inf"), "")
        i = j = 0
        remainingChars = len(t)
        while j < len(s):
            while j < len(s) and remainingChars:
                if s[j] in dic:
                    if dic[s[j]] > 0:
                        remainingChars -= 1
                    dic[s[j]] -= 1
                j += 1
            if remainingChars:
                return minStr[1]
            while i < len(s):
                if s[i] in dic:
                    if dic[s[i]] == 0:
                        dic[s[i]] += 1
                        remainingChars += 1
                        break
                    dic[s[i]] += 1
                i += 1
            minStr = min( [ minStr, (j - i, s[i : j]) ] )
            i += 1
        return minStr[1]

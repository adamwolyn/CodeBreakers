import heapq
class KthLargest:

    def __init__(self, k: int, nums: List[int]):
        heapify(nums)
        for i in range(len(nums) - k):
            heappop(nums)
        self.minHeap = nums
    def add(self, val: int) -> int:
        if val >= self.minHeap[0]:
            heapreplace(self.minHeap, val)
        return self.minHeap[0]
        


# Your KthLargest object will be instantiated and called as such:
# obj = KthLargest(k, nums)
# param_1 = obj.add(val)
